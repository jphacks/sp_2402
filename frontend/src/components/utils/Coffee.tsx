/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.2 coffee.glb --types 
*/

import * as THREE from 'three'
import React from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type ActionName = 'PlaneAction.002'

interface GLTFAction extends THREE.AnimationClip {
  name: ActionName
}

type GLTFResult = GLTF & {
  nodes: {
    Cylinder_1: THREE.Mesh
    Cylinder_2: THREE.Mesh
    Cube: THREE.Mesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Cube005: THREE.Mesh
    Cube007: THREE.Mesh
    Cube009: THREE.Mesh
    Cube010: THREE.Mesh
    Cube002: THREE.Mesh
    Sphere: THREE.Mesh
    Sphere001: THREE.Mesh
    Cube001: THREE.Mesh
    Cube011: THREE.Mesh
    Torus: THREE.Mesh
    Cube013: THREE.Mesh
    Cylinder001: THREE.Mesh
    Cylinder002: THREE.Mesh
    Plane002: THREE.Mesh
    Cube012: THREE.Mesh
    Cylinder003: THREE.Mesh
    Circle: THREE.Mesh
    Circle001: THREE.Mesh
  }
  materials: {
    cup: THREE.MeshStandardMaterial
    cofee: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.002']: THREE.MeshStandardMaterial
    ['Material.007']: THREE.MeshStandardMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Material.005']: THREE.MeshStandardMaterial
    ['Material.009']: THREE.MeshStandardMaterial
    ['Material.010']: THREE.MeshStandardMaterial
    ['Material.011']: THREE.MeshStandardMaterial
    ['Material.008']: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    ['Material.004']: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[]
}

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = React.useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/model/coffee.glb') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Cylinder" position={[-0.274, 0.428, -1.342]} rotation={[Math.PI / 2, 1.257, -Math.PI / 2]} scale={0.519}>
          <mesh name="Cylinder_1" geometry={nodes.Cylinder_1.geometry} material={materials.cup} />
          <mesh name="Cylinder_2" geometry={nodes.Cylinder_2.geometry} material={materials.cofee} />
        </group>
        <mesh name="Cube" geometry={nodes.Cube.geometry} material={materials['Material.002']} position={[0.161, 4.024, 0]} />
        <mesh name="Cube003" geometry={nodes.Cube003.geometry} material={materials['Material.002']} position={[-0.756, 1.926, -0.159]} rotation={[0.048, 0, 0.308]} scale={[1, 1.158, 1]} />
        <mesh name="Cube004" geometry={nodes.Cube004.geometry} material={materials['Material.002']} position={[-0.348, 1.703, 0.224]} />
        <mesh name="Cube005" geometry={nodes.Cube005.geometry} material={materials['Material.002']} position={[-0.348, 1.703, -0.17]} rotation={[0.048, 0, 0]} />
        <mesh name="Cube007" geometry={nodes.Cube007.geometry} material={materials['Material.002']} position={[-0.669, 2.258, 0.585]} rotation={[0, 0.384, 0.212]} scale={[1.149, 1.581, 0.988]} />
        <mesh name="Cube009" geometry={nodes.Cube009.geometry} material={materials['Material.002']} position={[-0.484, 1.578, 0]} rotation={[0, 0, 0.212]} scale={[1.123, 1.122, 1.156]} />
        <mesh name="Cube010" geometry={nodes.Cube010.geometry} material={materials['Material.002']} position={[-0.196, 1.765, 0]} scale={[1, 2.036, 1]} />
        <mesh name="Cube002" geometry={nodes.Cube002.geometry} material={materials['Material.002']} position={[-0.756, 1.926, 0]} rotation={[-0.114, 0, 0.308]} scale={[1, 1.158, 1]} />
        <mesh name="Sphere" geometry={nodes.Sphere.geometry} material={materials['Material.007']} position={[1.051, 3.744, 0]} rotation={[0, 0, -0.679]} scale={[0.117, 0.28, 0.28]} />
        <mesh name="Sphere001" geometry={nodes.Sphere001.geometry} material={materials['Material.001']} position={[1.236, 3.901, 0]} rotation={[0, 0, -0.16]} scale={[0.031, 0.073, 0.073]} />
        <mesh name="Cube001" geometry={nodes.Cube001.geometry} material={materials['Material.002']} position={[0.161, 3.511, 0]} rotation={[-0.083, 0, 0]} />
        <mesh name="Cube011" geometry={nodes.Cube011.geometry} material={materials['Material.002']} position={[0.161, 3.553, 0]} rotation={[0.148, 0, 0]} />
        <mesh name="Torus" geometry={nodes.Torus.geometry} material={materials['Material.005']} position={[0.133, 3.211, 0]} rotation={[0, 0, -0.095]} scale={[0.443, 0.391, 0.443]} />
        <mesh name="Cube013" geometry={nodes.Cube013.geometry} material={materials['Material.005']} position={[0.939, 3.085, 0.149]} scale={0.222} />
        <mesh name="Cylinder001" geometry={nodes.Cylinder001.geometry} material={materials['Material.009']} position={[-0.002, 5.559, 0]} rotation={[Math.PI / 2, 1.494, -Math.PI / 2]} scale={[0.965, 1.013, 1.013]} />
        <mesh name="Cylinder002" geometry={nodes.Cylinder002.geometry} material={materials['Material.010']} position={[0.002, 5.665, 0]} rotation={[Math.PI / 2, 1.494, -Math.PI / 2]} scale={[0.973, 1.021, 1.021]} />
        <mesh name="Plane002" geometry={nodes.Plane002.geometry} material={materials['Material.011']} position={[0.984, 4.073, 0.561]} rotation={[-0.17, 0, -Math.PI / 2]} scale={[0.178, 0.178, 0.282]} />
        <mesh name="Cube012" geometry={nodes.Cube012.geometry} material={materials['Material.002']} position={[-1.147, 1.995, 1.08]} rotation={[1.424, 0, -Math.PI]} scale={[-0.457, -0.699, -1.267]} />
        <mesh name="Cylinder003" geometry={nodes.Cylinder003.geometry} material={materials['Material.008']} position={[1.011, 4.033, -0.373]} rotation={[0, 0, -Math.PI / 2]} scale={[0.133, 0.133, 0.079]} />
        <mesh name="Circle" geometry={nodes.Circle.geometry} material={materials.Material} position={[1.111, 4.169, -0.405]} rotation={[-Math.PI / 2, -0.101, -Math.PI / 2]} scale={[0.234, 0.62, 0.29]} />
        <mesh name="Circle001" geometry={nodes.Circle001.geometry} material={materials['Material.004']} position={[1.1, 4.205, -0.39]} rotation={[-Math.PI / 2, -0.101, -Math.PI / 2]} scale={[0.234, 0.62, 0.29]} />
      </group>
    </group>
  )
}

useGLTF.preload('/coffee.glb')
